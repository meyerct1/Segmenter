function output_args=forLoop(function_struct)
% Usage
% This module is used to loop through a series of modules. The modules that will be looped through are listed in the LoopFunctions input structure member.
% Input Structure Members
% EndLoop – The loop will stop when the loop counter reaches this value.
% IncrementLoop – The value by which the loop counter will be incremented every time one loop cycle is completed.
% LoopFunctions – The list of module input structures that will be looped through.
% StartLoop – The loop counter will be initialized to this value.
% Any other arguments may be added to the FunctionArgs structure and they will be available to the modules contained in the LoopFunctions structure member. This allows the loop modules to have access to values generated by modules outside the loop.
% Output Structure Members
% Any values generated by the modules in the loop can be made available to modules outside the loop by adding them to the KeepValues structure.

global dependencies_list;
global dependencies_index;

instance_name=function_struct.InstanceName;
cur_idx=dependencies_index.get(instance_name);
input_args=function_struct.FunctionArgs;
start_loop=input_args.StartLoop.Value;
end_loop=input_args.EndLoop.Value;
increment_loop=input_args.IncrementLoop.Value;
loop_functions=function_struct.LoopFunctions;

for i=start_loop:increment_loop:end_loop
    dependency_item=dependencies_list{cur_idx};
    %propagate any updated input args to the loop functions
    updateArgs(instance_name,dependency_item.FunctionArgs,'input');
    %update the value of LoopCounter to dependent functions
    updateArg(instance_name,'output','LoopCounter',i);
    for j=1:size(loop_functions,1)
        loop_function_instance_name=loop_functions{j}.InstanceName;
        callFunction(loop_function_instance_name,false);
    end
    output_args=makeOutputStruct(function_struct);
    output_args.LoopCounter=i;
    updateArgs(instance_name,output_args,'output');
end


for i=1:size(loop_functions,1)
    loop_function_instance_name=loop_functions{j}.InstanceName;
    clearArgs(loop_function_instance_name);
end

%end forloop
end
